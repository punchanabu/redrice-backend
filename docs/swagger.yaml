definitions:
  models.Restaurant:
    properties:
      address:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      telephone:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      telephone:
        type: string
      userId:
        type: integer
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login Credentials
        in: body
        name: body
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
        "400":
          description: Invalid input format
          schema:
            type: string
        "401":
          description: Authentication failed
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Login a user
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 'Register {name: string, telephone: string, email: string, password:
          string, role: string}'
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register a new user
  /restaurants:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Restaurant'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a All Restaurant
    post:
      parameters:
      - description: Restaurant
        in: body
        name: restaurant
        required: true
        schema:
          $ref: '#/definitions/models.Restaurant'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Restaurant'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a Restaurant
  /restaurants/{id}:
    delete:
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete a Restaurant
    get:
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Restaurant'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a Single Restaurant
    put:
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Restaurant
        in: body
        name: restaurant
        required: true
        schema:
          $ref: '#/definitions/models.Restaurant'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Restaurant'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update a Restaurant
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a All User
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a User
  /users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a User
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a Single User
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a User
swagger: "2.0"
